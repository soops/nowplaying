// Generated by CoffeeScript 1.10.0
var NowPlaying;

NowPlaying = (function() {
  function NowPlaying(key) {
    this.key = key;
    if (this.key == null) {
      throw new Error("NowPlaying: Please define a valid Last.fm API key.");
    }
  }

  NowPlaying.prototype.getLastPlayed = function(user, limit) {
    if (limit == null) {
      return limit = 5;
    }
  };

  $.getJSON("http://ws.audioscrobbler.com/2.0/?method=user.getRecentTracks&user=" + user + "&api_key=" + NowPlaying.key + "&limit=" + limit + "&format=json&callback=?", function(data) {
    var lastSongFullSentence, song;
    song = data.recenttracks.track[0];
    if (song["@arg"].nowPlaying !== "") {
      lastSongFullSentence = 'I\'m currently listening to ' + '<a class=\'music\' href=\'' + song['url'] + '\'>' + song.name + ' by ' + song.artist['#text'] + '</a>.';
    } else {
      lastSongFullSentence = 'The last song I listened to was ' + '<a class=\'music\' href=\'' + song['url'] + '\'>' + song.name + ' by ' + song.artist['#text'] + '</a>.';
    }
    return {
      json: data.recenttracks,
      last: {
        json: data.recenttracks.track[0],
        album: data.recenttracks[0].album["#text"],
        artist: data.recenttracks[0].artist["#text"],
        song: data.recenttracks[0].name,
        sentence: lastSongFullSentence,
        time: new Date(data.recenttracks[0].time["uts"]),
        image: {
          small: data.recenttracks[0].image[0]["#text"],
          medium: data.recenttracks[0].image[1]["#text"],
          large: data.recenttracks[0].image[2]["#text"],
          extraLarge: data.recenttracks[0].image[3]["#text"]
        }
      }
    };
  });

  return NowPlaying;

})();
